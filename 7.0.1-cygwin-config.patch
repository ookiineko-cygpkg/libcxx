--- origsrc/libcxx-7.0.1.src/include/__config	2019-05-07 15:19:44.345793400 -0400
+++ src/libcxx-7.0.1.src/include/__config	2019-05-07 15:22:46.033012500 -0400
@@ -59,7 +59,7 @@
 #  define _LIBCPP_OBJECT_FORMAT_ELF   1
 #elif defined(__MACH__)
 #  define _LIBCPP_OBJECT_FORMAT_MACHO 1
-#elif defined(_WIN32)
+#elif defined(_WIN32) || defined(__CYGWIN__)
 #  define _LIBCPP_OBJECT_FORMAT_COFF  1
 #elif defined(__wasm__)
 #  define _LIBCPP_OBJECT_FORMAT_WASM  1
@@ -253,6 +253,10 @@
 #  define _LIBCPP_HAS_QUICK_EXIT
 #endif  // __NetBSD__
 
+#if defined(__CYGWIN__)
+#  define _LIBCPP_SHORT_WCHAR   1
+#endif
+
 #if defined(_WIN32)
 #  define _LIBCPP_WIN32API
 #  define _LIBCPP_LITTLE_ENDIAN
@@ -808,7 +812,11 @@ typedef __char32_t char32_t;
 #endif
 
 // Just so we can migrate to the new macros gradually.
+#ifdef _LIBCPP_BUILDING_LIBRARY
+#define _LIBCPP_INLINE_VISIBILITY
+#else
 #define _LIBCPP_INLINE_VISIBILITY _LIBCPP_HIDE_FROM_ABI
+#endif
 
 // Inline namespaces are available in Clang/GCC/MSVC regardless of C++ dialect.
 #define _LIBCPP_BEGIN_NAMESPACE_STD namespace std { inline namespace _LIBCPP_ABI_NAMESPACE {
@@ -979,7 +987,7 @@ template <unsigned> struct __static_asse
 
 #if defined(__unix__) || (defined(__APPLE__) && defined(__MACH__))
 // Most unix variants have catopen.  These are the specific ones that don't.
-#  if !defined(__BIONIC__) && !defined(_NEWLIB_VERSION)
+#  if !defined(__BIONIC__) && !defined(_NEWLIB_VERSION) || defined(__CYGWIN__)
 #    define _LIBCPP_HAS_CATOPEN 1
 #  endif
 #endif
@@ -1113,6 +1121,7 @@ _LIBCPP_FUNC_VIS extern "C" void __sanit
       defined(__CloudABI__) || \
       defined(__sun__) || \
       defined(__MVS__) || \
+      defined(__CYGWIN__) || \
       (defined(__MINGW32__) && __has_include(<pthread.h>))
 #    define _LIBCPP_HAS_THREAD_API_PTHREAD
 #  elif defined(__Fuchsia__)
@@ -1200,7 +1209,7 @@ _LIBCPP_FUNC_VIS extern "C" void __sanit
 #endif
 
 #if !defined(_LIBCPP_HAS_NO_OFF_T_FUNCTIONS)
-#  if defined(_LIBCPP_MSVCRT) || defined(_NEWLIB_VERSION)
+#  if defined(_LIBCPP_MSVCRT) || (defined(_NEWLIB_VERSION) && !defined(__CYGWIN__))
 #    define _LIBCPP_HAS_NO_OFF_T_FUNCTIONS
 #  endif
 #endif
